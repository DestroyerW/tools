# -*- coding: utf-8 -*-
# Author: Litre WU
# E-mail: litre-wu@tutanota.com
# Software: PyCharm
# File: 常用正则表达式.py
# Time: 10月 27, 2021
import re

# 440681 19996 0101 0101
# 130503 67 0401 001
# 身份证号码(18位)
# "[1-9]\d{5}(?:19|20)\d\d(?:0[1-9]|1[012])(?:0[1-9]|[12]\d|3[01])\d{3}[0-9Xx]"
# 身份证号码(15位)
# "[1-9]\d{7}(?:0[1-9]|1[012])(?:0[1-9]|[12]\d|3[01])\d{3}"
# 身份证号
# "[1-9]\d{5}(?:19|20)\d\d(?:0[1-9]|1[012])(?:0[1-9]|[12]\d|3[01])\d{3}[0-9Xx]|[1-9]\d{7}(?:0[1-9]|1[012])(?:0[1-9]|[12]\d|3[01])\d{3}"

# "\d{17}[0-9Xx]|\d{15}"

# "[1-9]\d{5}(?:\d{2}|(?:19|20)\d\d)(?:0[1-9]|1[012])(?:0[1-9]|[12]\d|3[01])(?:\d{3}[0-9Xx]|\d{3})"

# 邮箱
# [*#\u4e00-\u9fa5 a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-]+

# 上网卡号段
# [145, 147]
# "14[57]\d{8}"

# # 5G卡号段
# [190, 192, 196, 197]
# "19[0267]\d{8}"

# 普通号段
# '130', '131', '132', '133', '134', '135', '136', '137', '138', '139'
# '150', '151', '152', '153',        '155', '156', '157', '158', '159'
# '170', '171', '172', '173',        '175', '176', '177', '178'
# '180', '181', '182', '183', '184', '185', '186', '187', '188', '189'
# '190', '191', '192', '193', '194', '195', '196', '197', '198', '199'

# [f'1{s}{t}' for s in [3, 5, 7, 8, 9] for t in range(10) if not ((s == 5 and t == 4) or (s == 7 and (t == 4 or t > 8)))]

# "1(?:[389]\d{9}|[57](?:[0-3]|[5-9])\d{8})"

# 自定义号段
tel_pre_list = [188, 199]
# "(?:"+"|".join([str(x) for x in tel_pre_list])+")\d{8}"


def search(txt):
    info = {
        "contact": re.findall("[^\u4e00-\u9fa5]((?:[\u4e00-\u9fa5]+先生|[\u4e00-\u9fa5]+生|[\u4e00-\u9fa5]+女士|[\u4e00-\u9fa5]+小姐|[\u4e00-\u9fa5]+总|[\u4e00-\u9fa5]+经理))[^\u4e00-\u9fa5]", txt),
        "tel_list": re.findall('\D((?:1(?:[389]\d{9}|[57](?:[0-3]|[5-9])\d{8})|(?:\d{3}-\d{8}|\d{4}-\d{8}-\d{4}|\d{4}-\d{8}|\d{4}-\d{7})))\D', txt),
        "email_list": re.findall('[*#a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9]+', txt)
    }
    return info


if __name__ == '__main__':

    # text = "abc44068119960101010Xabc"
    # pattern = "\d{17}[0-9Xx]|\d{15}"
    # pattern = "[1-9]\d{5}(?:\d{2}|(?:19|20)\d\d)(?:0[1-9]|1[012])(?:0[1-9]|[12]\d|3[01])(?:\d{3}[0-9Xx]|\d{3})"
    text = "abc18820125689abc"
    pattern = "(?:"+"|".join([str(x) for x in tel_pre_list])+")\d{8}"
    rs = re.findall(pattern, text, flags=0)
    if rs:
        print(rs)
        print(len(rs[0]))
